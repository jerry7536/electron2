name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  version:
    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm

      - name: Install Dependencies
        run: pnpm install --frozen-lockfile

      - name: Build Release Files
        run: pnpm build
        env:
          UPDATER_PK: ${{ secrets.UPDATER_PK }}
          UPDATER_CERT: ${{ secrets.UPDATER_CERT }}

      - name: Print diff
        run: git diff

      - name: Update version
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: update version by action

      - name: release
        uses: softprops/action-gh-release@v2
        with:
          files: release/*.asar.gz
          name: Release ${{ github.ref_name }}
          prerelease: true
          token: ${{ secrets.GITHUB_TOKEN }}

  build:
    needs:
      - version
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm

      - name: Install Dependencies
        run: pnpm install --frozen-lockfile

      - name: Build Release Files
        run: pnpm release:electron
        env:
          UPDATER_PK: ${{ secrets.UPDATER_PK }}
          UPDATER_CERT: ${{ secrets.UPDATER_CERT }}

      - name: release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            release/*.AppImage
            release/*.deb
            release/*.dmg
            release/*.exe
            release/*.7z
          name: Release ${{ github.ref_name }}
          prerelease: true
          token: ${{ secrets.GITHUB_TOKEN }}
          fail_on_unmatched_files: false

  logs:
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: changelog
        run: npx changelogithub --prerelease
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
