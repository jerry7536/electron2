name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  version:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm

      - name: Install Dependencies
        run: pnpm install --frozen-lockfile

      - name: Build Release Files
        run: pnpm build
        env:
          UPDATER_PK: ${{ secrets.UPDATER_PK }}
          UPDATER_CERT: ${{ secrets.UPDATER_CERT }}

      - name: Check for changes
        id: git_status
        run: |
          if [[ $(git status --porcelain) ]]; then
            git diff
            echo "CHANGED=true" >> $GITHUB_OUTPUT
          else
            echo "CHANGED=false" >> $GITHUB_OUTPUT
          fi

      - name: Commit changes
        if: steps.git_status.outputs.changed == 'true'
        run: |
          git config user.email "$GITHUB_ACTOR"
          git config user.name "$GITHUB_ACTOR@users.noreply.github.com"
          git add .
          git commit -m "Update signature in Action"
          git push origin HEAD:master

      - name: release
        uses: softprops/action-gh-release@v2
        with:
          files: release/*.asar.gz
          name: Release ${{ github.ref_name }}
          prerelease: true
          token: ${{ secrets.GITHUB_TOKEN }}

  build:
    needs:
      - version
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm

      - name: Install Dependencies
        run: pnpm install --frozen-lockfile

      - name: Build Release Files
        run: pnpm release:electron
        env:
          UPDATER_PK: ${{ secrets.UPDATER_PK }}
          UPDATER_CERT: ${{ secrets.UPDATER_CERT }}

      - name: release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            release/*.AppImage
            release/*.deb
            release/*.dmg
            release/*.exe
            release/*.7z
          name: Release ${{ github.ref_name }}
          prerelease: true
          token: ${{ secrets.GITHUB_TOKEN }}
          fail_on_unmatched_files: false

  logs:
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: changelog
        run: npx changelogithub --prerelease
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
